#
# Copyright 2017 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: "idp-spark-processor-silver-{{ macros.datetime.now().strftime("%Y-%m-%d-%H-%M-%S") }}-{{ task_instance.try_number }}"
  namespace: spark-ns
spec:
  type: Scala
  mode: cluster
  image: "idp-spark:1.0.0"
  imagePullPolicy: Never
  mainClass: br.com.idp.ApplicationSilver
  mainApplicationFile: "local:///opt/jars/processor-spark-1.0.0.jar" 
  arguments: ["--config-file={{ params.config_file }}"]
  sparkVersion: "3.3.2"
  restartPolicy:
    type: Never
  sparkConf:
    "spark.hadoop.fs.s3a.endpoint" : "http://minio.tenant-ns"
    "spark.hadoop.fs.s3a.access.key": "{{ params.s3a_access_key }}"
    "spark.hadoop.fs.s3a.secret.key": "{{ params.s3a_secret_key }}"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.connection.maximum": "100"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
  hadoopConf:
    "fs.s3a.endpoint": "http://minio.tenant-ns"
    "fs.s3a.access.key": "{{ params.s3a_access_key }}"
    "fs.s3a.secret.key": "{{ params.s3a_secret_key }}"
  driver:
    cores: 2
    memory: "1G"
    labels:
      version: 3.3.2
    serviceAccount: spark-apps-sa
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
  executor:
    cores: 2
    instances: 2
    memory: "1G"
    labels:
      version: 3.3.2
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
